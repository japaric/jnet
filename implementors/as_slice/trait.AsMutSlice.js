(function() {var implementors = {};
implementors["as_slice"] = [];
implementors["owning_slice"] = [{text:"impl&lt;B, I&gt; <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a> for <a class=\"struct\" href=\"owning_slice/struct.OwningSliceFrom.html\" title=\"struct owning_slice::OwningSliceFrom\">OwningSliceFrom</a>&lt;B, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Index,&nbsp;</span>",synthetic:false,types:["owning_slice::from::OwningSliceFrom"]},{text:"impl&lt;B, I&gt; <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a> for <a class=\"struct\" href=\"owning_slice/struct.OwningSliceTo.html\" title=\"struct owning_slice::OwningSliceTo\">OwningSliceTo</a>&lt;B, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Index,&nbsp;</span>",synthetic:false,types:["owning_slice::to::OwningSliceTo"]},{text:"impl&lt;B, I&gt; <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a> for <a class=\"struct\" href=\"owning_slice/struct.OwningSlice.html\" title=\"struct owning_slice::OwningSlice\">OwningSlice</a>&lt;B, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Index,&nbsp;</span>",synthetic:false,types:["owning_slice::OwningSlice"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()